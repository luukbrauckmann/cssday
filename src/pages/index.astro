---
import { Speakers, Talks } from "@components";
import "@assets/css/layout.css";
import "@assets/css/reset.css";
import "@assets/css/typography.css";

const response = await fetch("https://cssday.nl/data");
let data = await response.json();
data = Object.keys(data).map((key) => data[key]);
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content="CSS! CSS! CSS! CSS! CSS!" />

    <title>CSS Day</title>

    <link rel="sitemap" href="/sitemap-index.xml" />

    <link rel="preload" href="/fonts/OpenSans.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="/fonts/OpenSans-Italic.woff2" as="font" type="font/woff2" crossorigin>
    <link rel="preload" href="/fonts/PixelifySans.woff2" as="font" type="font/woff2" crossorigin>
  </head>
  <body>
    <h1>CSS Day</h1>

    {
      data.map((row) => (
        <section class="full" style={`background-color: ${row.color.hex};`}>
          <h2>{row.title}</h2>
          <Speakers data={row.speakers} />
          <Talks data={row.talks} />

          <pre>{ JSON.stringify(row, null, 2) }</pre>
        </section>
      ))
    }
  </body>
</html>

<style>
  :root {
    color-scheme: dark light;
  }

  @media (prefers-color-scheme: light) {
    /* @see https://coolors.co/palette/eee7d7-e6c9c6-4e705d-58554c-a97c41-e8ada5 */
    :root {
      --c-background: #eee7d7;
      --c-text: #1a1c1a;
    }
  }

  @media (prefers-color-scheme: dark) {
    :root {
      --c-background: #1a1c1a;
      --c-text: #eee7d7;
    }
  }

  html {
    font-size: 1.125rem;
  }

  body {
    background-color: var(--c-background);
    color: var(--c-text);
  }
</style>
